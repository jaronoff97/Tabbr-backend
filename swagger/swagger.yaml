swagger: "2.0"
info:
  version: 1.0.0
  title: Tabbr
  description: An api specification for the Tabbr app's backend
  contact:
    name: Jacob Aronoff
    email: jacobaronoff45@gmail.com
    url: http://jaronoff97.github.io
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /v1
securityDefinitions:
  AccountKey:
    type: apiKey
    in: header
    name: api_key
security:
  - AccountKey: []
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      description: |
        Returns all users given an account. Must be signed in
      operationId: v1.route_methods.all_users
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: List of users for the account holder
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new user in the store.  Duplicates are not allowed
      operationId: v1.route_methods.add_user
      parameters:
        - name: user
          in: body
          description: User to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        200:
          description: User response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    parameters:
      - name: id
        in: path
        description: ID of user to fetch
        required: true
        type: integer
        format: int64
    get:
      description: Returns a user based on a single ID, if the account does not have access to the user, error
      operationId: v1.route_methods.get_user
      responses:
        200:
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single user based on the ID supplied
      operationId: v1.route_methods.delete_user
      responses:
        204:
          description: user deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
  NewUser:
    required:
      - name
      - money_owed
    properties:
      name:
        type: string
      money_owed:
        type: integer
        format: int64
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string